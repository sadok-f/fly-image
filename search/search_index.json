{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p> GitHub     \u00b7     Bugs Report </p> <p> </p> <p>The Flyimg project is a Dockerized application that allows you to resize, crop, and compress images on the fly.  One Docker container to build your own Cloudinary-like service.</p> <p>By default, Flyimg generates the AVIF image format (when the browser supports it)  which provides superior compression compared to other formats.</p> <p>Additionally, Flyimg also generates the WebP format, along with the impressive MozJPEG compression algorithm to optimize images, other formats are supported also such as PNG and GIF.</p>"},{"location":"#how-it-works","title":"How it works:","text":"<p>Fetch an image from anywhere; resize, compress, cache and serve...and serve, and serve, and serve...</p> <p>You pass the image URL and a set of keys with options, like size or compression. Flyimg will fetch the image, convert it, store it, cache it and serve it. The next time the request comes, it will serve the cached version.</p> <pre><code>&lt;!-- https://mudawn.com/assets/butterfly-3000.jpg --&gt;\n&lt;img\n  src=\"https://demo.flyimg.io/upload/w_300,q_90/https://mudawn.com/assets/butterfly-3000.jpg\"\n/&gt;\n</code></pre> <p></p>"},{"location":"#demo","title":"Demo","text":"<p>Check out our demo page where you can test and review Flying's features:</p> <p>https://demo.flyimg.io/ </p>"},{"location":"#cloud-run-button","title":"Cloud Run Button","text":"<p>Flyimg can be deployed to GCP as a serverless container in one click with Cloud Run Button:</p> <p></p>"},{"location":"#how-to-transform-images","title":"How to transform images","text":"<p>You go to your server URL<code>http://imgs.kitty.com</code> and append <code>/upload/</code>; after that you can pass these options below, followed by an underscore and a value <code>w_250,q_50</code> Options are separated by coma (configurable to other separator).</p> <p>After the options put the source of your image, it can be relative to your server or absolute: <code>/https://my.storage.io/imgs/pretty-kitten.jpg</code></p> <p>So to get a pretty kitten at 250 pixels wide, with 50% compression, you would write. <code>&lt;img src=\"http://imgs.kitty.com/upload/w_250,q_50/https://my.storage.io/imgs/pretty-kitten.jpg\"&gt;</code></p>"},{"location":"#demo-application-running","title":"Demo Application running","text":"<p>https://demo.flyimg.io</p> <p><code>https://demo.flyimg.io/upload/w_300,h_250,c_1,o_jpg/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"#community","title":"Community","text":"<ul> <li>Follow us on GitHub, Twitter and LinkedIn.</li> </ul>"},{"location":"#adopters","title":"Adopters","text":"<p>See the ADOPTERS.md file for a list of companies / organisations that are using Flyimg.</p>"},{"location":"#contributors","title":"Contributors","text":"<p>This project exists thanks to all the people who contributed to it </p> <p></p>"},{"location":"#supporters","title":"Supporters","text":"<p>A special thanks to JetBrains for supporting our project with their open source license program.</p> <p></p>"},{"location":"#backers","title":"Backers","text":"<p>Become a backer and show your support to our open source project on our site.</p> <p></p>"},{"location":"#sponsors","title":"Sponsors","text":"<p>Does your company use Flyimg? If not, consider asking your manager or marketing team if they would be interested in supporting our project. Their support will help the maintainers dedicate more time to maintenance and develop new features for the community.</p> <p>Here's the info.</p> <p> </p>"},{"location":"#star-history","title":"Star History","text":""},{"location":"#license","title":"License","text":"<p>The AGPL-3.0 License. Please see License File for more information.</p> <p>Enjoy your Flyimaging!</p>"},{"location":"basic-usage/","title":"Basic Usage","text":"<p>You can see the full list of options configurable by URL params, with examples, in the URL-Options document</p> <p>We put a lot of defaults in place to prevent distortion, bad quality, weird cropping and unwanted padding.</p> <p>The most common URL options are:</p>"},{"location":"basic-usage/#get-an-image-to-fill-exact-dimensions","title":"Get an image to fill exact dimensions","text":"<ul> <li>Image: <code>https://mudawn.com/assets/butterfly-3000.jpg</code></li> <li>Width: 300</li> <li>Height: 250</li> <li>Crop if necessary: <code>c_1</code></li> </ul> <p><code>https://demo.flyimg.io/upload/w_300,h_250,c_1/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"basic-usage/#get-an-image-to-fit-maximum-dimensions","title":"Get an image to fit maximum dimensions","text":"<ul> <li>Image: <code>https://mudawn.com/assets/butterfly-3000.jpg</code></li> <li>Width: 300</li> <li>Height: 250</li> <li>Note that we omit the crop parameter</li> </ul> <p><code>https://demo.flyimg.io/upload/w_300,h_250/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"basic-usage/#crop-to-a-square-and-rotate-90-degrees-clockwise","title":"Crop to a square and rotate 90 degrees clockwise","text":"<ul> <li>Image: <code>https://mudawn.com/assets/butterfly-3000.jpg</code></li> <li>Width: 200</li> <li>Height: 200</li> <li>Crop: <code>c_1</code></li> <li>Rotate: 90</li> </ul> <p><code>https://demo.flyimg.io/upload/w_200,h_200,c_1,r_90/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"basic-usage/#get-an-image-with-exact-dimensions-and-low-quality","title":"Get an image with exact dimensions and low quality","text":"<ul> <li>Image: <code>https://mudawn.com/assets/butterfly-3000.jpg</code></li> <li>Width: 200</li> <li>Height: 200</li> <li>Crop: <code>c_1</code></li> <li>Quality: 30</li> </ul> <p><code>https://demo.flyimg.io/upload/w_200,h_200,c_1,q_30/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"basic-usage/#smart-crop","title":"Smart Crop","text":"<ul> <li>Image: <code>https://images.pexels.com/photos/1280553/pexels-photo-1280553.jpeg</code></li> <li>Width: 500</li> <li>Smart Crop: <code>smc_1</code></li> </ul> <p>Without Smart Crop</p> <p><code>https://demo.flyimg.io/upload/w_500/https://images.pexels.com/photos/1280553/pexels-photo-1280553.jpeg</code></p> <p></p> <p>With Smart Crop Enabled</p> <p><code>https://demo.flyimg.io/upload/w_500,smc_1/https://images.pexels.com/photos/1280553/pexels-photo-1280553.jpeg</code></p> <p></p>"},{"location":"basic-usage/#get-a-pdf-page-image-to-fit-dimensions","title":"Get a PDF page image to fit dimensions","text":"<ul> <li>PDF: <code>http://mudawn.com/assets/lighthouses.pdf</code></li> <li>Width: 200</li> <li>Height: 200</li> <li>Page: <code>pg_1</code></li> </ul> <p><code>https://demo.flyimg.io/upload/w_200,h_200,pg_1/http://mudawn.com/assets/lighthouses.pdf</code></p> <p></p>"},{"location":"basic-usage/#get-a-video-image-to-fit-dimensions-from-a-time-duration-point","title":"Get a video image to fit dimensions from a time duration point","text":"<ul> <li>Video: <code>http://mudawn.com/assets/big_buck_bunny_720p_2mb.mp4</code></li> <li>Width: 200</li> <li>Height: 200</li> <li>Time: <code>tm_00:00:05</code></li> </ul> <p><code>https://demo.flyimg.io/upload/w_200,h_200,tm_00:00:05/http://mudawn.com/assets/big_buck_bunny_720p_2mb.mp4</code></p> <p></p>"},{"location":"basic-usage/#converting-to-colorspace-gray","title":"Converting to Colorspace Gray","text":"<ul> <li>Image: <code>https://mudawn.com/assets/butterfly-3000.jpg</code></li> <li>Width: 400</li> <li>Colorspace: <code>clsp_Gray</code></li> </ul> <p><code>https://demo.flyimg.io/upload/w_400,clsp_Gray/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"basic-usage/#converting-to-monochrome","title":"Converting to Monochrome","text":"<ul> <li>Image: <code>https://mudawn.com/assets/butterfly-3000.jpg</code></li> <li>Width: 400</li> <li>Monochrome: <code>mnchr_1</code></li> </ul> <p><code>https://demo.flyimg.io/upload/w_400,mnchr_1/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"basic-usage/#using-width-and-height","title":"Using width AND height","text":"<p>example:<code>h_300,w_300</code> By default setting width and height together, works like defining a rectangle that will define a max-width and max-height and the image will scale proportionally to fit that area without cropping.</p> <p>By default; width, height, or both will not scale up an image that is smaller than the defined dimensions.</p> <p><code>h_300,w_300</code> : <code>https://demo.flyimg.io/upload/h_300,w_300/https://mudawn.com/assets/butterfly-3000.jpg</code></p>"},{"location":"basic-usage/#smc-smart-crop","title":"<code>smc</code> : smart crop","text":"<p><code>bool</code> Default: <code>false</code> Description: Smart cropping feature, uses python script to determine coordinates</p> <p>example:<code>smc_1</code></p> <p><code>smc_1,w_500</code> : <code>https://demo.flyimg.io/upload/upload/smc_1,w_500/https://images.pexels.com/photos/1280553/pexels-photo-1280553.jpeg</code></p>"},{"location":"basic-usage/#r-rotate","title":"<code>r</code> : rotate","text":"<p><code>string</code> Default: <code>null</code> Description: Apply image rotation (using shear operations) to the image.</p> <p>example: <code>r_90</code>, <code>r_-180</code>,...</p> <p><code>r_45</code> : <code>https://demo.flyimg.io/upload/r_-45,w_400,h_400/https://mudawn.com/assets/butterfly-3000.jpg</code></p>"},{"location":"basic-usage/#o-output","title":"<code>o</code> : output","text":"<p><code>string</code> Default: <code>auto</code> Description: Output format requested, for example you can force the output as jpeg file in case of source file is png. The default <code>auto</code> will try to output the best format for the requesting browser, falling back to the same format as the source image or finally with a fallback to jpg.</p> <p>example:<code>o_auto</code>,<code>o_input</code>,<code>o_png</code>,<code>o_webp</code>,<code>o_jpeg</code>,<code>o_jpg</code></p>"},{"location":"basic-usage/#q-quality","title":"<code>q</code> : quality","text":"<p><code>int</code> (0-100) Default: <code>90</code> Description: Sets the compression level for the output image. Your best results will be between 70 and 95.</p> <p>example:<code>q_100</code>,<code>q_75</code>,...</p> <p><code>q_30</code> : <code>https://demo.flyimg.io/upload/q_30/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p><code>q_100</code> : <code>https://demo.flyimg.io/upload/q_100/https://mudawn.com/assets/butterfly-3000.jpg</code></p>"},{"location":"basic-usage/#refresh-or-re-fetch-source-image","title":"Refresh or re-fetch source image","text":"<p><code>rf</code> : refresh Default: <code>false</code> Description: When this parameter is 1, it will force a re-request of the original image and run it through the transformations and compression again. It will delete the local cached copy.</p> <p>example:<code>rf_1</code></p>"},{"location":"basic-usage/#face-detection-options","title":"Face Detection options","text":""},{"location":"basic-usage/#fc-face-crop","title":"<code>fc</code> : face-crop","text":"<p><code>int</code> Default: <code>0</code> Description: Using facedetect repository to detect faces and passe the coordinates to ImageMagick to crop.</p> <p>example:<code>fc_1</code></p> <p><code>fc_1</code> : <code>https://demo.flyimg.io/upload/fc_1/http://facedetection.jaysalvat.com/img/faces.jpg</code></p> <p></p>"},{"location":"basic-usage/#fcp-face-crop-position","title":"<code>fcp</code> : face-crop-position","text":"<p><code>int</code> Default: <code>0</code> Description: When using the Face crop option and when the image contain more than one face, you can specify which one you want get cropped</p> <p>example:<code>fcp_1</code>,<code>fcp_0</code>,...</p> <p><code>fcp_2</code> : <code>https://demo.flyimg.io/upload/fc_1,fcp_2/http://facedetection.jaysalvat.com/img/faces.jpg</code></p> <p></p>"},{"location":"basic-usage/#fb-face-blur","title":"<code>fb</code> : face-blur","text":"<p><code>int</code> Default: <code>0</code> Description: Apply blur effect on faces in a given image</p> <p>example:<code>fb_1</code></p> <p><code>fb_1</code> : <code>https://demo.flyimg.io/upload/fb_1/http://facedetection.jaysalvat.com/img/faces.jpg</code></p> <p></p>"},{"location":"basic-usage/#get-the-path-to-the-generated-image-instead-of-serving-it","title":"Get the path to the generated image instead of serving it","text":"<p>Change the first part of the path from <code>upload</code> to <code>path</code>, like so:</p> <p><code>https://demo.flyimg.io/path/w_300,h_250,c_1/https://mudawn.com/assets/butterfly-3000.jpg</code> will output in the body of the response:</p> <p><code>http://localhost:8080/uploads/752d2124eef87b3112779618c96468da.jpg</code></p>"},{"location":"benchmark/","title":"Benchmark","text":""},{"location":"benchmark/#benchmark","title":"Benchmark","text":"<p>See benchmark.sh for more details.</p> <p>Requires: Apache Ab</p> <pre><code>./benchmark.sh\n</code></pre> <p>Latest Results:</p> <pre><code>------------------------------------------------------------------------------\n------------------------------------------------------------------------------\nCrop http://localhost:8081/upload/w_500,h_500,c_1/wat-arun.jpg\n------------------------------------------------------------------------------\nThis is ApacheBench, Version 2.3 &lt;$Revision: 1903618 $&gt;\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking localhost (be patient)\nCompleted 100 requests\nCompleted 200 requests\nCompleted 300 requests\nCompleted 400 requests\nCompleted 500 requests\nCompleted 600 requests\nCompleted 700 requests\nCompleted 800 requests\nCompleted 900 requests\nCompleted 1000 requests\nFinished 1000 requests\n\n\nServer Software:        nginx/1.18.0\nServer Hostname:        localhost\nServer Port:            8081\n\nDocument Path:          /upload/w_500,h_500,c_1/wat-arun.jpg\nDocument Length:        130752 bytes\n\nConcurrency Level:      4\nTime taken for tests:   2.098 seconds\nComplete requests:      1000\nFailed requests:        0\nTotal transferred:      131423000 bytes\nHTML transferred:       130752000 bytes\nRequests per second:    476.68 [#/sec] (mean)\nTime per request:       8.391 [ms] (mean)\nTime per request:       2.098 [ms] (mean, across all concurrent requests)\nTransfer rate:          61178.30 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   0.1      0       0\nProcessing:     3    5  34.0      3    1056\nWaiting:        3    5  33.4      3    1054\nTotal:          3    5  34.0      4    1056\n\nPercentage of the requests served within a certain time (ms)\n  50%      4\n  66%      4\n  75%      4\n  80%      4\n  90%      4\n  95%      5\n  98%      6\n  99%      6\n 100%   1056 (longest request)\n\n------------------------------------------------------------------------------\n------------------------------------------------------------------------------\nSimple Resize http://localhost:8081/upload/w_500,h_500/wat-arun.jpg\n------------------------------------------------------------------------------\nThis is ApacheBench, Version 2.3 &lt;$Revision: 1903618 $&gt;\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking localhost (be patient)\nCompleted 100 requests\nCompleted 200 requests\nCompleted 300 requests\nCompleted 400 requests\nCompleted 500 requests\nCompleted 600 requests\nCompleted 700 requests\nCompleted 800 requests\nCompleted 900 requests\nCompleted 1000 requests\nFinished 1000 requests\n\n\nServer Software:        nginx/1.18.0\nServer Hostname:        localhost\nServer Port:            8081\n\nDocument Path:          /upload/w_500,h_500/wat-arun.jpg\nDocument Length:        95525 bytes\n\nConcurrency Level:      4\nTime taken for tests:   1.010 seconds\nComplete requests:      1000\nFailed requests:        0\nTotal transferred:      96195000 bytes\nHTML transferred:       95525000 bytes\nRequests per second:    989.84 [#/sec] (mean)\nTime per request:       4.041 [ms] (mean)\nTime per request:       1.010 [ms] (mean, across all concurrent requests)\nTransfer rate:          92985.65 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   0.1      0       1\nProcessing:     3    4   3.3      3      61\nWaiting:        3    4   3.2      3      61\nTotal:          3    4   3.3      4      61\n\nPercentage of the requests served within a certain time (ms)\n  50%      4\n  66%      4\n  75%      4\n  80%      4\n  90%      4\n  95%      5\n  98%      6\n  99%      8\n 100%     61 (longest request)\n\n------------------------------------------------------------------------------\n------------------------------------------------------------------------------\nSimple Resize with refresh http://localhost:8081/upload/w_500,h_500,rf_1/wat-arun.jpg\n------------------------------------------------------------------------------\nThis is ApacheBench, Version 2.3 &lt;$Revision: 1903618 $&gt;\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking localhost (be patient)\nCompleted 100 requests\nCompleted 200 requests\nCompleted 300 requests\nCompleted 400 requests\nCompleted 500 requests\nCompleted 600 requests\nCompleted 700 requests\nCompleted 800 requests\nCompleted 900 requests\nCompleted 1000 requests\nFinished 1000 requests\n\n\nServer Software:        nginx/1.18.0\nServer Hostname:        localhost\nServer Port:            8081\n\nDocument Path:          /upload/w_500,h_500,rf_1/wat-arun.jpg\nDocument Length:        95523 bytes\n\nConcurrency Level:      4\nTime taken for tests:   203.944 seconds\nComplete requests:      1000\nFailed requests:        936\n   (Connect: 0, Receive: 0, Length: 936, Exceptions: 0)\nNon-2xx responses:      913\nTotal transferred:      8241565 bytes\nHTML transferred:       7937078 bytes\nRequests per second:    4.90 [#/sec] (mean)\nTime per request:       815.778 [ms] (mean)\nTime per request:       203.944 [ms] (mean, across all concurrent requests)\nTransfer rate:          39.46 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   0.1      0       2\nProcessing:    95  813 398.7   1009    1434\nWaiting:       95  813 398.7   1009    1434\nTotal:         95  813 398.7   1009    1434\n\nPercentage of the requests served within a certain time (ms)\n  50%   1009\n  66%   1043\n  75%   1068\n  80%   1082\n  90%   1123\n  95%   1164\n  98%   1253\n  99%   1321\n 100%   1434 (longest request)\n\n------------------------------------------------------------------------------\n------------------------------------------------------------------------------\nResize http://localhost:8081/upload/w_500,h_500,rz_1/wat-arun.jpg\n------------------------------------------------------------------------------\nThis is ApacheBench, Version 2.3 &lt;$Revision: 1903618 $&gt;\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking localhost (be patient)\nCompleted 100 requests\nCompleted 200 requests\nCompleted 300 requests\nCompleted 400 requests\nCompleted 500 requests\nCompleted 600 requests\nCompleted 700 requests\nCompleted 800 requests\nCompleted 900 requests\nCompleted 1000 requests\nFinished 1000 requests\n\n\nServer Software:        nginx/1.18.0\nServer Hostname:        localhost\nServer Port:            8081\n\nDocument Path:          /upload/w_500,h_500,rz_1/wat-arun.jpg\nDocument Length:        95823 bytes\n\nConcurrency Level:      4\nTime taken for tests:   2.104 seconds\nComplete requests:      1000\nFailed requests:        0\nTotal transferred:      96493000 bytes\nHTML transferred:       95823000 bytes\nRequests per second:    475.39 [#/sec] (mean)\nTime per request:       8.414 [ms] (mean)\nTime per request:       2.104 [ms] (mean, across all concurrent requests)\nTransfer rate:          44796.88 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   0.1      0       1\nProcessing:     3    5  35.6      4    1128\nWaiting:        3    5  35.6      3    1128\nTotal:          3    5  35.6      4    1128\n\nPercentage of the requests served within a certain time (ms)\n  50%      4\n  66%      4\n  75%      4\n  80%      4\n  90%      4\n  95%      4\n  98%      5\n  99%      8\n 100%   1128 (longest request)\n\n------------------------------------------------------------------------------\n------------------------------------------------------------------------------\nRotate http://localhost:8081/upload/r_-45,w_400,h_400/wat-arun.jpg\n------------------------------------------------------------------------------\nThis is ApacheBench, Version 2.3 &lt;$Revision: 1903618 $&gt;\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking localhost (be patient)\nCompleted 100 requests\nCompleted 200 requests\nCompleted 300 requests\nCompleted 400 requests\nCompleted 500 requests\nCompleted 600 requests\nCompleted 700 requests\nCompleted 800 requests\nCompleted 900 requests\nCompleted 1000 requests\nFinished 1000 requests\n\n\nServer Software:        nginx/1.18.0\nServer Hostname:        localhost\nServer Port:            8081\n\nDocument Path:          /upload/r_-45,w_400,h_400/wat-arun.jpg\nDocument Length:        68958 bytes\n\nConcurrency Level:      4\nTime taken for tests:   1.808 seconds\nComplete requests:      1000\nFailed requests:        0\nTotal transferred:      69628000 bytes\nHTML transferred:       68958000 bytes\nRequests per second:    553.16 [#/sec] (mean)\nTime per request:       7.231 [ms] (mean)\nTime per request:       1.808 [ms] (mean, across all concurrent requests)\nTransfer rate:          37612.77 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   0.1      0       1\nProcessing:     3    5  25.7      3     805\nWaiting:        3    5  25.7      3     805\nTotal:          3    5  25.7      4     806\n\nPercentage of the requests served within a certain time (ms)\n  50%      4\n  66%      4\n  75%      4\n  80%      4\n  90%      4\n  95%      4\n  98%      7\n  99%     10\n 100%    806 (longest request)\n</code></pre>"},{"location":"configuration/","title":"Application Options","text":""},{"location":"configuration/#the-file-configparametersyml","title":"The file config/parameters.yml","text":"<p>Here are the app options you can configure with the config/parameters.yml these options operate at runtime, you don't need to rebuild the container or restart any service, all requests<sup>1</sup> will check this config.</p>"},{"location":"configuration/#debug","title":"debug","text":"<p>Defaults to: <code>false</code> Description: Enables debug mode, currently is used only for the tests, so there's no harm in leaving it as it is.</p>"},{"location":"configuration/#log_level","title":"log_level","text":"<p>Defaults to: <code>error</code> Description: Log level, possible values are: debug, info, notice, warning, error</p>"},{"location":"configuration/#enable_cronjob_cleanup","title":"enable_cronjob_cleanup","text":"<p>Defaults to: <code>true</code> Description: # To enable the Cleanup Cronjob to purge the var/tmp folder</p>"},{"location":"configuration/#cronjob_cleanup_interval","title":"cronjob_cleanup_interval","text":"<p>Defaults to: <code>0 */5 * * *</code> Description: The cronjob interval to cleanup the var/tmp folder</p>"},{"location":"configuration/#enable_avif","title":"enable_avif","text":"<p>Defaults to: <code>true</code> Description: Serve AVIF automatically to Browsers supporting it. You can always request an image in Avif format passing the <code>o_avif</code> URL option key.</p>"},{"location":"configuration/#enable_webp","title":"enable_webp","text":"<p>Defaults to: <code>true</code> Description: Serve WebP automatically to Browsers supporting it. You can always request an image in webP format passing the <code>o_webp</code> URL option key.</p>"},{"location":"configuration/#header_cache_days","title":"header_cache_days","text":"<p>Defaults to: <code>365</code> Description: Number of days for header cache expires <code>max_age</code>, this is the header sent to the client or browser requesting the resource. You can pass cache busting parameters to the URL which will break cache in all modern proxies and Browsers.</p>"},{"location":"configuration/#options_separator","title":"options_separator","text":"<p>Defaults to: <code>,</code> Description: URL options are separated by default by comas <code>,</code> but you can change that to some other character, like <code>._~:[]@!$'()*+;</code> just be carefull that it doesn't conflict with the sintaz of options you are passing to the URL, there is no strict checking of separating characters.</p> <p>Important</p> <p>When changing <code>options_separator</code> in <code>config/parameters</code>, you need to change the <code>OPTIONS_SEPARATOR</code> value in <code>web/js/main.js</code>.</p>"},{"location":"configuration/#restricted_domains","title":"restricted_domains","text":"<p>Defaults to: <code>false</code> Description: This restricts fetching images for transformations only from whitelisted domains (see <code>whitelist_domains</code>). A good measure of safety and to prevent abuse of your app from third parties is to set <code>restricted_domains</code> to <code>true</code>, this way the app will download and try to transform resources only from domains you trust or have control of.</p>"},{"location":"configuration/#whitelist_domains","title":"whitelist_domains","text":"<p>Defaults to:</p> <pre><code>    - domain-1.com\n    - domain-2.com\n</code></pre> <p>Description: If <code>restricted_domains</code> is enabled, put your whitelisted domains in this list, subdomains are also OK. For the Digital Ocean Provisioning Script you can set the restricted domains at the droplet provisioning step.</p>"},{"location":"configuration/#disable_cache","title":"disable_cache","text":"<p>Defaults to: <code>false</code> Description: When set to true the generated image will be deleted from the cache in web/upload and served directly in the response</p>"},{"location":"configuration/#storage_system","title":"storage_system","text":"<p>Defaults to: <code>local</code></p> <p>More info at Storage Options.</p>"},{"location":"enable-xdebug/","title":"Enabling Xdebug","text":""},{"location":"enable-xdebug/#on-macos","title":"On macOS","text":"<ul> <li>Create an alias for localhost network</li> </ul> <pre><code>sudo ifconfig en0 alias 10.254.254.254 255.255.255.0\n</code></pre> <ul> <li>Run the Flyimg image with variable environment</li> </ul> <pre><code>docker run -itd -p 8080:80 -e PHP_XDEBUG_ENABLED=1 -e XDEBUG_CONFIG=remote_host=10.254.254.254 -e PHP_IDE_CONFIG=serverName=Xdebug -v (pwd):/var/www/html --name flyimg flyimg\n</code></pre> <ul> <li>Add Xdebug params to php.ini</li> </ul> <pre><code>docker exec flyimg sh -c 'printf \"xdebug.idekey=PHPSTORM\nxdebug.default_enable=0\nxdebug.remote_enable=1\nxdebug.remote_autostart=0\nxdebug.remote_connect_back=0\nxdebug.profiler_enable=0\nxdebug.profiler_output_dir=/var/www/html/xdebug\nxdebug.remote_host=10.254.254.254\nxdebug.remote_port=9000\" &gt;&gt; /usr/local/etc/php/conf.d/xdebug.ini'\n</code></pre> <ul> <li>Restart PHP-fpm</li> </ul> <pre><code>docker exec flyimg s6-svc -r /var/run/s6/services/php-fpm\n</code></pre>"},{"location":"enable-xdebug/#phpstorm","title":"PhpStorm","text":"<ul> <li>Add new server with name <code>Xdebug</code>, Host: <code>localhost</code>, Port: <code>80</code>, Debuger: <code>Xdebug</code></li> <li>Use Path mapping and map the local file path with the path on the server <code>/var/www/html</code></li> <li>Add new PHP Remote Debug with Server: <code>Xdebug</code>, ide key (session id): <code>PHPSTORM</code></li> <li>Add Breakpoints to test</li> </ul>"},{"location":"helm-chart/","title":"Helm Chart","text":""},{"location":"helm-chart/#installing-the-flyimg-helm-chart","title":"Installing the Flyimg Helm Chart","text":"<p>This section provides the steps to install the Flyimg Helm chart using Helm.</p>"},{"location":"helm-chart/#prerequisites","title":"Prerequisites","text":"<ul> <li>Helm 3.x installed on your machine. Get Helm</li> <li>Kubernetes cluster running (local or cloud-based)</li> </ul>"},{"location":"helm-chart/#add-flyimg-helm-repository","title":"Add Flyimg Helm Repository","text":"<p>First, add the Flyimg Helm chart repository to Helm:</p> <pre><code>helm repo add flyimg https://charts.flyimg.io\nhelm repo update\n</code></pre>"},{"location":"helm-chart/#install-flyimg","title":"Install Flyimg","text":"<p>Once the repository is added, you can install the Flyimg chart with the following command:</p> <pre><code>helm install &lt;release_name&gt; flyimg/flyimg\n</code></pre> <p>Replace <code>&lt;release_name&gt;</code> with a name you choose for your deployment.</p>"},{"location":"helm-chart/#customizing-installation","title":"Customizing Installation","text":"<p>You can customize your Flyimg installation by providing a custom <code>values.yaml</code> file. For example:</p> <pre><code>helm install &lt;release_name&gt; flyimg/flyimg -f values.yaml\n</code></pre> <p>Alternatively, you can pass in parameters directly via the command line:</p> <pre><code>helm install &lt;release_name&gt; flyimg/flyimg \\\n  --set key1=value1,key2=value2\n</code></pre> <p>To override the default configuration for Flyimg, you can do that by adding the needed changes in the <code>parameters:</code> section in your values.yaml file as the following example:</p> <pre><code>parameters:\n    storage_system: local\n    aws_s3:\n        access_id: 'xxxxxxx'\n        secret_key: 'xxxxxx'\n        region: 'eu-central-1'\n        bucket_name: 'xxxxx'\n    ....\n</code></pre>"},{"location":"helm-chart/#upgrade-flyimg","title":"Upgrade Flyimg","text":"<p>To upgrade the Flyimg chart after making changes to your configuration:</p> <pre><code>helm upgrade &lt;release_name&gt; flyimg/flyimg\n</code></pre>"},{"location":"helm-chart/#uninstalling-flyimg","title":"Uninstalling Flyimg","text":"<p>To uninstall and remove all associated resources:</p> <pre><code>helm uninstall &lt;release_name&gt;\n</code></pre>"},{"location":"helm-chart/#helm-chart-repository-info","title":"Helm Chart Repository Info","text":"<ul> <li>Repository URL: https://charts.flyimg.io</li> <li>Chart Name: flyimg</li> <li>Available Versions: Run <code>helm search repo flyimg</code> to see the available chart versions.</li> <li>Github repo: https://github.com/flyimg/helm-charts</li> </ul>"},{"location":"install/","title":"Install","text":""},{"location":"install/#requirements","title":"Requirements","text":"<p>You will need to have Docker on your machine.</p>"},{"location":"install/#options-1-run-the-ready-docker-image","title":"Options 1: Run the ready Docker image","text":"<p>Pull the docker image</p> <pre><code>docker pull flyimg/flyimg\n</code></pre> <p>Start the container</p> <pre><code>docker run -itd -p 8080:80 flyimg/flyimg\n</code></pre> <p>To use custom parameters, make a copy of parameters.yml to your current directory. Update to suit your needs and run the command with volume parameter to replace the original parameters file.</p> <pre><code>docker run -itd -p 8080:80 -v $(pwd)/parameters.yml:/var/www/html/config/parameters.yml flyimg/flyimg\n</code></pre>"},{"location":"install/#options-2-build-from-source","title":"Options 2: Build from source","text":"<p>You can spin up your own working server in 10 minutes using the provision scripts for AWS Elastic Beanstalk or the DigitalOcean Ubuntu Droplets.</p> <p>For other environments or if you want to tweak and play in your machine before rolling out, read along...</p> <pre><code>git clone https://github.com/flyimg/flyimg.git\n</code></pre> <p>CD into the folder and to build the docker image by running:</p> <pre><code>docker build -t flyimg .\n</code></pre> <p>This will download and build the main image, It will take a few minutes.</p> <p>IMPORTANT! If you cloned the project, only for the first time, you need to run <code>composer install</code> inside the container:</p> <pre><code>docker exec -it flyimg composer install\n</code></pre> <p>Again, it will take a few minutes to download the dependencies.</p> <p>Then run the container:</p> <pre><code>docker run -itd -p 8080:80 -v $(pwd):/var/www/html --name flyimg flyimg\n</code></pre> <p>For Fish shell users:</p> <pre><code>docker run -itd -p 8080:80 -v $PWD:/var/www/html --name flyimg flyimg\n</code></pre> <p>The above command will make the Dockerfile run s6-overlay command which launches 2 processes: nginx and php-fpm and starts listening on port 8080.</p>"},{"location":"install/#testing-flyimg-service","title":"Testing Flyimg service","text":"<p>You can navigate to your machine's IP in port 8080 (ex: http://127.0.0.1:8080/ ) ; you should get the demo homepage of Flyimg already working. If you get any errors at this stage it's most likely that composer has not finished installing or skipped something.</p> <p>You can test your image resizing service by navigating to: http://127.0.0.1:8080/upload/w_600,h_500,q_90/https://mudawn.com/assets/butterfly-3000.jpg</p> <p>It's working!</p> <p>This is fetching an image , resizing it, saving it and serving it.</p>"},{"location":"security/","title":"Security","text":""},{"location":"security/#restricting-source-domains","title":"Restricting Source Domains","text":"<p>Restricted domains disabled by default. This means that you can fetch a resource from any URL. To enable the domain restriction, change in config/parameters.yml</p> <pre><code>restricted_domains: true\n</code></pre> <p>After enabling, you need to put the white listed domains</p> <pre><code>whitelist_domains:\n  - www.domain-1.org\n  - www.domain-2.org\n</code></pre>"},{"location":"security/#signature-generation","title":"Signature Generation","text":"<p>Based on this RFC Signature Generation was added to Flyimg in order to avoid DDOS attacks.</p> <p>First you need to edit <code>security_key</code> and <code>security_iv</code> in parameters.yml file and add a proper values. Than any request to Fyimg app will throw an error unless it's encrypted.</p> <p>To generate the encrypted url you need to run this command:</p> <pre><code>docker exec flyimg php app.php encrypt w_200,h_200,c_1/https://mudawn.com/assets/butterfly-3000.jpg\n</code></pre> <p>it'll return something like this:</p> <pre><code>Hashed request: TGQ1WWRKVGUrZUpoNmJMc2RMUENPL2t6ZDJkWkdOejlkM0p0U0F3WTgxOU5IMzF3U3R0d2V4b3dqbG52cFRTSFZDcmhrY1JnaGZYOHJ3V0NpZDNNRmc9PQ==\n</code></pre> <p>Now you can request the image throw this new url:</p> <pre><code>http://localhost:8080/upload/TGQ1WWRKVGUrZUpoNmJMc2RMUENPL2t6ZDJkWkdOejlkM0p0U0F3WTgxOU5IMzF3U3R0d2V4b3dqbG52cFRTSFZDcmhrY1JnaGZYOHJ3V0NpZDNNRmc9PQ==\n</code></pre>"},{"location":"storage-options/","title":"Storage Options","text":""},{"location":"storage-options/#storage-options","title":"Storage Options","text":""},{"location":"storage-options/#storage_system","title":"storage_system","text":"<p>Available options: <code>local</code>, <code>s3</code> Defaults to: <code>local</code> Description: You can store the transformed images in many different ways taking advantage of the Flysystem file system, like AWS S3, Azure, FTP, Dropbox, or whatever, although currently the only two easy options are <code>local</code> (the default) and <code>s3</code> to use an AWS S3 bucket.</p> <p>Read more below at Abstract storage with Flysystem.</p>"},{"location":"storage-options/#using-aws-s3-as-storage-provider","title":"Using AWS S3 as Storage Provider","text":"<p>in parameters.yml change the <code>storage_system</code> option from local to s3, and fill in the aws_s3 options :</p> <pre><code>storage_system: s3\n\naws_s3:\n  access_id: \"s3-access-id\"\n  secret_key: \"s3-secret-id\"\n  region: \"s3-region\"\n  bucket_name: \"s3-bucket-name\"\n  path_prefix: \"s3-path-prefix\" # optional\n  endpoint: \"https://%s.s3.%s.amazonaws.com/\" # optional for third party S3 compatible services, the format is https://&lt;bucket-name&gt;.s3.&lt;region&gt;.amazonaws.com/ \n  visibility: \"PRIVATE\" # options: PUBLIC or PRIVATE\n</code></pre>"},{"location":"storage-options/#abstract-storage-with-flysystem","title":"Abstract storage with Flysystem","text":"<p>Storage files based on Flysystem which is <code>a filesystem abstraction allows you to easily swap out a local filesystem for a remote one. Technical debt is reduced as is the chance of vendor lock-in.</code></p> <p>Default storage is Local, but you can use other Adapters like AWS S3, Azure, FTP, Dropbox, ...</p> <p>Currently, only the local and S3 are implemented as Storage Provider in Flyimg application, but you can add your specific one easily in <code>src/Core/Provider/StorageProvider.php</code></p>"},{"location":"unit-tests/","title":"Unit Tests","text":""},{"location":"unit-tests/#run-unit-tests","title":"Run Unit Tests","text":"<pre><code>docker exec flyimg vendor/bin/phpunit\n</code></pre> <p>Generate Html Code Coverage:</p> <pre><code>docker exec flyimg vendor/bin/phpunit --coverage-html build/html\n</code></pre>"},{"location":"url-options/","title":"URL Options","text":"<p>This document lists and describes the full list of options available to be passed as parameters in the URL.</p> <p>The server is setup to perform operations based on the following URL pattern.</p> <pre><code>https://server.address.io/[process-type]/[image_options]/[path_to_image]\n</code></pre> <p>for example:</p> <pre><code>https://demo.flyimg.io/upload/w_500/https://mudawn.com/assets/butterfly-3000.jpg\n</code></pre> <p>Explanation:</p>"},{"location":"url-options/#process-type-upload-or-path","title":"process-type: upload or path","text":"<p>There are 2 main proceses you can do for images.</p> <p>The first: upload, grabs an image from a URL, transforms it, saves it, and serves it, as an image, with all the appropriate headers.</p> <p>The second: path, grabs an image from a URL, transforms it, saves it, and returns the absolute path to the image as a string, in the body of the response.</p>"},{"location":"url-options/#path_to_image","title":"path_to_image","text":"<p>It's the first operation the server does, it will try to get an image from the URI in the path, it can be relative to the local server, or absolute to the internet.</p> <p>example: <code>https://mudawn.com/assets/butterfly-3000.jpg</code></p>"},{"location":"url-options/#image_options","title":"image_options","text":"<p>Here you set all the transformations and output settings you want to apply to the image you are fetching.</p> <p>Most of these options are ImageMagick flags, many can get pretty advanced, use the ImageMagick docs. We put a lot of defaults in place to prevent distortion, bad quality, weird cropping and unwanted paddings.</p> <p>The script does a lot of sanitizing of the parameters, so many options will not work or have to be carefully escaped. Priority is given to safety and eas of use.</p>"},{"location":"url-options/#basic-geometry","title":"Basic geometry","text":""},{"location":"url-options/#w-width","title":"<code>w</code> : width","text":"<p><code>int</code> Default: <code>null</code> Description: Sets the target width of the image. If not set, width will be calculated in order to keep aspect ratio.</p> <p>example:<code>w_100</code></p> <p><code>w_100</code> : <code>https://demo.flyimg.io/upload/w_100/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"url-options/#h-height","title":"<code>h</code> : height","text":"<p><code>int</code> Default: <code>null</code> Description: Sets the target height of the image. If not set, height will be calculated in order to keep aspect ratio.</p> <p>example:<code>h_100</code></p> <p><code>h_100</code> : <code>https://demo.flyimg.io/upload/h_100/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"url-options/#using-width-and-height","title":"Using width AND height","text":"<p>example:<code>h_300,w_300</code> By default setting width and height together, works like defining a rectangle that will define a max-width and max-height and the image will scale propotionally to fit that area without cropping.</p> <p>By default; width, height, or both will not scale up an image that is smaller than the defined dimensions.</p> <p><code>h_300,w_300</code> : <code>https://demo.flyimg.io/upload/h_300,w_300/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"url-options/#c-crop","title":"<code>c</code> : crop","text":"<p><code>bool</code> Default: <code>false</code> Description: When both width and height are set, this allows the image to be cropped, so it fills the width x height area.</p> <p>example:<code>c_1</code></p> <p><code>c_1,h_400,w_400</code> : <code>https://demo.flyimg.io/upload/c_1,h_400,w_400/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"url-options/#g-gravity","title":"<code>g</code> : gravity","text":"<p><code>string</code> Default: <code>Center</code> Description: When crop is applied, changing the gravity will define which part of the image is kept inside the crop area. The basic options are: <code>NorthWest</code>, <code>North</code>, <code>NorthEast</code>, <code>West</code>, <code>Center</code>, <code>East</code>, <code>SouthWest</code>, <code>South</code>, <code>SouthEast</code>.</p> <p>example:<code>g_West</code></p>"},{"location":"url-options/#t-text","title":"<code>t</code> : text","text":"<p><code>string</code> Default: <code>null</code> Description: Add text to the image (watermark). Use the gravity option <code>g</code> to define where the text will be placed.</p> <p>example:<code>t_Hello</code></p>"},{"location":"url-options/#tc-text-color","title":"<code>tc</code> : text-color","text":"<p><code>string</code> Default: <code>white</code> Description: Set the color of the text. For the hex code, the hash <code>#</code> character should be replaced by <code>%23</code></p> <p>example:<code>tc_%23ff4455</code>, <code>tc_red</code></p>"},{"location":"url-options/#ts-text-size","title":"<code>ts</code> : text-size","text":"<p><code>int</code> Default: <code>12</code> Description: Set the size of the text.</p> <p>example:<code>ts_24</code></p>"},{"location":"url-options/#ts-text-size_1","title":"<code>ts</code> : text-size","text":"<p><code>int</code> Default: <code>12</code> Description: Set the size of the text.</p> <p>example:<code>ts_24</code></p>"},{"location":"url-options/#tbg-text-bg","title":"<code>tbg</code> : text-bg","text":"<p><code>string</code> Default: <code>null</code> Description: Set the background color of the text. For the hex code, the hash <code>#</code> character should be replaced by <code>%23</code></p> <p>example:<code>tbg_%23ff4455</code>, <code>tbg_red</code></p> <p></p>"},{"location":"url-options/#r-rotate","title":"<code>r</code> : rotate","text":"<p><code>string</code> Default: <code>null</code> Description: Apply image rotation (using shear operations) to the image.</p> <p>example: <code>r_90</code>, <code>r_-180</code>,...</p> <p><code>r_45</code> : <code>https://demo.flyimg.io/upload/r_-45,w_400,h_400/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"url-options/#output-file-formats","title":"Output file formats","text":""},{"location":"url-options/#o-output","title":"<code>o</code> : output","text":"<p><code>string</code> Default: <code>auto</code> Description: Output format requested, for example you can force the output as jpeg file in case of source file is png. The default <code>auto</code> will try to output the best format for the requesting browser, falling back to the same format as the source image or finally with a fallback to jpg.</p> <p>If <code>input</code> is passed, no \"optimal\" format will be attempted. Flyimg will try to respond with the source format or fallback to <code>jpg</code>.</p> <p>example:<code>o_auto</code>,<code>o_input</code>,<code>o_png</code>,<code>o_webp</code>,<code>o_jpeg</code>,<code>o_jpg</code></p>"},{"location":"url-options/#q-quality","title":"<code>q</code> : quality","text":"<p><code>int</code> (0-100) Default: <code>90</code> Description: Sets the compression level for the output image. Your best results will be between 70 and 95.</p> <p>example:<code>q_100</code>,<code>q_75</code>,...</p> <p><code>q_30</code> : <code>https://demo.flyimg.io/upload/q_30,w_600/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p> <p><code>q_100</code> : <code>https://demo.flyimg.io/upload/q_100,w_600/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"url-options/#webpl-webp-lossless","title":"<code>webpl</code> : webp-lossless","text":"<p><code>int</code> Default: <code>0</code> Description: If output is set to webp, it will default to lossy compression, but if you want lossless webp encoding you have to set it to 1.</p> <p>example:<code>webpl_1</code></p> <p><code>webpl_1</code> : <code>https://demo.flyimg.io/upload/webpl_1,w_600/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"url-options/#webpm-webp-method","title":"<code>webpm</code> : webp-method","text":"<p><code>string</code> Default: <code>4</code> Description: the compression method to use. It controls the trade off between encoding speed and the compressed file size and quality. Possible values range from 0 to 6. Default value is 4. When higher values are utilized, the encoder spends more time inspecting additional encoding possibilities and decide on the quality gain. Lower value might result in faster processing time at the expense of larger file size and lower compression quality.</p> <p>example:<code>webpm_6</code></p>"},{"location":"url-options/#refresh-or-re-fetch-source-image","title":"Refresh or re-fetch source image","text":""},{"location":"url-options/#rf-refresh","title":"<code>rf</code> : refresh","text":"<p>Default: <code>false</code> Description: When this parameter is 1, it will force a re-request of the original image and run it through the transformations and compression again. It will delete the local cached copy.</p> <p>example:<code>rf_1</code></p> <p>The nginx server will send headers to prevent caching of this request.</p> <p>It will also send headers with the command done on the image + info returned by the command identity from Imagemagick.</p>"},{"location":"url-options/#fancy-options","title":"Fancy options","text":""},{"location":"url-options/#bg-background","title":"<code>bg</code> : background","text":"<p><code>color</code> (multiple formats) Default: <code>null</code> Description: Sets the background of the canvas for the cases where padding is added to the images. It supports hex, css color names, rgb. Only css color names are supported without quotation marks. For the hex code, the hash <code>#</code> character should be replaced by <code>%23</code></p> <p>example:<code>bg_red</code>,<code>bg_%23ff4455</code>,<code>bg_rgb(255,120,100)</code>,...</p> <pre><code>  [...] -background red ...\n  [...] -background \"#ff4455\" -&gt; \"%23ff4455\"\n  [...] -background \"rgb(255,120,100)\" ...\n</code></pre> <p><code>https://demo.flyimg.io/upload/r_45,w_400,h_400,bg_red/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"url-options/#st-strip","title":"<code>st</code> : strip","text":"<p><code>int</code> Default: <code>1</code> Description: removes exif data and additional color profile. Leaving your image with the default sRGB color profile.</p> <p>example:<code>st_1</code></p>"},{"location":"url-options/#ao-auto-orient","title":"<code>ao</code> : auto-orient","text":"<p><code>int</code> Default: <code>0</code> Description: Adjusts an image so that its orientation is suitable for viewing (i.e. top-left orientation).</p> <p>example:<code>ao_1</code></p>"},{"location":"url-options/#rz-resize","title":"<code>rz</code> : resize","text":"<p><code>int</code> Default: <code>null</code> Description: The alternative resizing method to -thumbnail.</p> <p>example:<code>rz_1</code></p>"},{"location":"url-options/#moz-mozjpeg","title":"<code>moz</code> : mozjpeg","text":"<p>Default: <code>1</code> Description: Use moz-jpeg compression library, if <code>0</code> it fallsback to the default ImageMagick compression algorithm.</p>"},{"location":"url-options/#unsh-unsharp","title":"<code>unsh</code> : unsharp","text":"<p><code>{radius}x{sigma}[+gain][+threshold]</code> Default: <code>null</code> Description: Sharpens an image (despite the unfortunate naming). It basically sharpens via subtracting a blurred, low contrast, version of the image to the image itself. For more details check Imagemagick docs.</p> <p>example 1:<code>unsh_0x6</code> example 2:<code>unsh_0.25x0.25+8+0.065</code></p>"},{"location":"url-options/#sh-sharpen","title":"<code>sh</code> : sharpen","text":"<p><code>{radius}x{sigma}</code> Default: <code>null</code> Description: Use a Gaussian operator of the given radius and standard deviation (sigma). For more details check Imagemagick docs.</p> <p>example 1:<code>sh_3</code> example 2:<code>sh_0x5</code></p>"},{"location":"url-options/#blr-blur","title":"<code>blr</code> : blur","text":"<p><code>{radius}x{sigma}</code> Default: <code>null</code> Description: Apply Blur on a image. For more details check Imagemagick docs.</p> <p>example 1:<code>blr_2</code> example 2:<code>blr_1x2</code></p>"},{"location":"url-options/#f-filter","title":"<code>f</code> : filter","text":"<p><code>string</code> Default: <code>Lanczos</code> Description: Resizing algorithm, Triangle is a smoother lighter option</p> <p>example:<code>f_Triangle</code></p>"},{"location":"url-options/#sc-scale","title":"<code>sc</code> : scale","text":"<p>Default: <code>null</code> Description: The \"-scale\" resize operator is a simplified, faster form of the resize command. Useful for fast exact scaling of pixels.</p> <p>example:<code>sc_1</code></p>"},{"location":"url-options/#fc-face-crop","title":"<code>fc</code> : face-crop","text":"<p><code>int</code> Default: <code>0</code> Description: Using facedetect repository to detect faces and passe the coordinates to ImageMagick to crop.</p> <p>example:<code>fc_1</code></p> <p><code>fc_1</code> : <code>https://demo.flyimg.io/upload/fc_1/http://facedetection.jaysalvat.com/img/faces.jpg</code></p> <p></p>"},{"location":"url-options/#fcp-face-crop-position","title":"<code>fcp</code> : face-crop-position","text":"<p><code>int</code> Default: <code>0</code> Description: When using the Face crop option and when the image contain more than one face, you can specify which one you want get cropped</p> <p>example:<code>fcp_1</code>,<code>fcp_0</code>,...</p> <p><code>fcp_2</code> : <code>https://demo.flyimg.io/upload/fc_1,fcp_2/http://facedetection.jaysalvat.com/img/faces.jpg</code></p> <p></p>"},{"location":"url-options/#fb-face-blur","title":"<code>fb</code> : face-blur","text":"<p><code>int</code> Default: <code>0</code> Description: Apply blur effect on faces in a given image</p> <p>example:<code>fb_1</code></p> <p><code>fb_1</code> : <code>https://demo.flyimg.io/upload/fb_1/http://facedetection.jaysalvat.com/img/faces.jpg</code></p> <p></p>"},{"location":"url-options/#smc-smart-crop","title":"<code>smc</code> : smart-crop","text":"<p><code>int</code> Default: <code>0</code> Description: Use smart crop to get the best possible crop of the image.</p> <p>example:<code>smc_1</code></p> <ul> <li>Image: <code>https://images.pexels.com/photos/1280553/pexels-photo-1280553.jpeg</code></li> <li>Width: 500</li> <li>Smart Crop: <code>smc_1</code></li> </ul> <p>Without Smart Crop</p> <p><code>https://demo.flyimg.io/upload/w_500/https://images.pexels.com/photos/1280553/pexels-photo-1280553.jpeg</code></p> <p></p> <p>With Smart Crop Enabled</p> <p><code>https://demo.flyimg.io/upload/w_500,smc_1/https://images.pexels.com/photos/1280553/pexels-photo-1280553.jpeg</code></p> <p></p>"},{"location":"url-options/#pg-pdf-page","title":"<code>pg</code> : pdf-page","text":"<p><code>int</code> Default: <code>1</code> Description: Sets the target page of the PDF. If not set, the default is page 1.</p> <p>example:<code>pg_1</code></p> <ul> <li>PDF: <code>http://mudawn.com/assets/lighthouses.pdf</code></li> <li>Width: 200</li> <li>Height: 200</li> <li>Page: <code>pg_1</code></li> </ul> <p><code>https://demo.flyimg.io/upload/w_200,h_200,pg_1/http://mudawn.com/assets/lighthouses.pdf</code></p> <p></p>"},{"location":"url-options/#tm-video-time","title":"<code>tm</code> : video-time","text":"<p><code>string</code> Default: <code>00:00:01</code> Description: Sets the frame capture time duration point in the video. If not set, the default is 1 second. The format is <code>HH:MM:SS</code> OR <code>SS</code></p> <p>example:<code>tm_00:00:05</code></p> <ul> <li>Video: <code>http://mudawn.com/assets/big_buck_bunny_720p_2mb.mp4</code></li> <li>Width: 200</li> <li>Height: 200</li> <li>Time: <code>tm_00:00:05</code></li> </ul> <p><code>https://demo.flyimg.io/upload/w_200,h_200,tm_00:00:05/http://mudawn.com/assets/big_buck_bunny_720p_2mb.mp4</code></p> <p></p>"},{"location":"url-options/#clsp-colorspace","title":"<code>clsp</code> : colorspace","text":"<p><code>string</code> Default: <code>null</code> Description: Convert the image to a different colorspace.</p> <p>example:<code>clsp_Gray</code></p> <ul> <li>Image: <code>https://mudawn.com/assets/butterfly-3000.jpg</code></li> <li>Width: 400</li> <li>Colorspace: <code>clsp_Gray</code></li> </ul> <p><code>https://demo.flyimg.io/upload/w_400,clsp_Gray/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"url-options/#mnchr-monochrome","title":"<code>mnchr</code> : monochrome","text":"<p><code>int</code> Default: <code>0</code> Description: Convert the image to monochrome.</p> <p>example:<code>mnchr_1</code></p> <ul> <li>Image: <code>https://mudawn.com/assets/butterfly-3000.jpg</code></li> <li>Width: 400</li> <li>Monochrome: <code>mnchr_1</code></li> </ul> <p><code>https://demo.flyimg.io/upload/w_400,mnchr_1/https://mudawn.com/assets/butterfly-3000.jpg</code></p> <p></p>"},{"location":"url-options/#e-extract","title":"<code>e</code> : extract","text":""},{"location":"url-options/#p1x-extract-top-x","title":"<code>p1x</code> : extract-top-x","text":""},{"location":"url-options/#p1y-extract-top-y","title":"<code>p1y</code> : extract-top-y","text":""},{"location":"url-options/#p2x-extract-bottom-x","title":"<code>p2x</code> : extract-bottom-x","text":""},{"location":"url-options/#p2y-extract-bottom-y","title":"<code>p2y</code> : extract-bottom-y","text":"<p>Default: <code>null</code></p> <p>Description: Extract and crop an image with given the x/y coordinates of each booth top and bottom.</p>"},{"location":"url-options/#sf-sampling-factor","title":"<code>sf</code> : sampling-factor","text":"<p>Default: <code>1x1</code> Description: ...</p>"},{"location":"url-options/#ett-extent","title":"<code>ett</code> : extent","text":"<p>Default: <code>null</code> Description: ... not ready</p>"},{"location":"url-options/#par-preserve-aspect-ratio","title":"<code>par</code> : preserve-aspect-ratio","text":"<p><code>int</code> Default: <code>1</code> Description: If set to 0, when passing width and height to an image, the image will be distorted to fill the size of the rectangle defined by width and height.</p>"},{"location":"url-options/#pns-preserve-natural-size","title":"<code>pns</code> : preserve-natural-size","text":"<p><code>int</code> Default: <code>1</code> Description: If set to 0 and if the source image is smaller than the target dimensions, the image will be stretched to the target size.</p>"},{"location":"url-options/#gf-gif-frame","title":"<code>gf</code> : gif-frame","text":"<p><code>int</code> Default: <code>0</code> Description: ...</p>"},{"location":"url-options/#pdf-options","title":"PDF options","text":"<p>Requires <code>ghostscript</code> installation in the Dockerfile.</p>"},{"location":"url-options/#pdfp-page-number","title":"<code>pdfp</code> : page number","text":"<p><code>int</code> Default: 1 Description: Sets the target page of the PDF. If not set, the default is page 1.</p> <p>example:<code>pdfp_2</code></p> <p><code>pdfp_2</code> : <code>https://demo.flyimg.io/upload/pdfp_2,w_300/https://mudawn.com/assets/lighthouses.pdf</code></p> <p></p>"},{"location":"url-options/#video-options","title":"Video options","text":"<p>Requires <code>ffmpeg</code> installation in the Dockerfile.</p>"},{"location":"url-options/#tm-time","title":"<code>tm</code> : time","text":"<p><code>string</code> Default: <code>00:00:01</code> Description: Sets the frame capture time duration point in the video. If not set, the default is 1 second. The format is <code>HH:MM:SS</code> OR <code>SS</code></p> <p>example:<code>tm_00:00:05</code></p> <p><code>tm_00:00:05</code> : <code>https://demo.flyimg.io/upload/tm_00:00:05/https://mudawn.com/assets/big_buck_bunny_720p_2mb.mp4</code></p> <p></p> <p>You can also use a shorter syntax for the first 60 seconds.</p> <p>example:<code>tm_10</code></p> <p><code>tm_10</code> : <code>https://demo.flyimg.io/upload/tm_10/https://mudawn.com/assets/big_buck_bunny_720p_2mb.mp4</code></p>"},{"location":"url-options/#options-keys","title":"Options keys","text":"<pre><code>options_keys:\n  moz: mozjpeg\n  q: quality\n  o: output\n  unsh: unsharp\n  fc: face-crop\n  fcp: face-crop-position\n  fb: face-blur\n  w: width\n  h: height\n  c: crop\n  bg: background\n  st: strip\n  rz: resize\n  g: gravity\n  f: filter\n  r: rotate\n  sc: scale\n  sf: sampling-factor\n  rf: refresh\n  ett: extent\n  par: preserve-aspect-ratio\n  pns: preserve-natural-size\n  webpl: webp-lossless\n</code></pre>"},{"location":"url-options/#default-options-values","title":"Default options values","text":"<pre><code>default_options:\n  mozjpeg: 1\n  quality: 90\n  output: auto\n  unsharp: null\n  face-crop: 0\n  face-crop-position: 0\n  face-blur: 0\n  width: null\n  height: null\n  crop: null\n  background: null\n  strip: 1\n  resize: null\n  gravity: Center\n  filter: Lanczos\n  rotate: null\n  scale: null\n  sampling-factor: 1x1\n  refresh: false\n  extent: null\n  preserve-aspect-ratio: 1\n  preserve-natural-size: 1\n  webp-lossless: 0\n</code></pre>"}]}